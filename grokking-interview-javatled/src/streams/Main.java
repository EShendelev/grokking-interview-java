package streams;

import java.util.List;

/**
 * <b>Параметры</b>
 * <p>Параметры заключаются в круглые скобки и разделяются запятыми. Например, (Circle circle1, Circle circle2).
 * <p>Параметров может не быть.
 * <p>Если параметров нет, нужно оставить пустые круглые скобки. Например, такая лямбда будет возвращать строку с
 * информацией о том, открыт ли магазин: () -> "магазин закрыт".
 * <p>
 * <b>Блок реализации функции</b>>
 * <p>Тело функции помещается в фигурные скобки. После ключевого слова return нужно указать возвращаемое значение — иначе
 * типом возвращаемого значения будет void.
 * <p>Тело лямбды может состоять из одного и более выражений.
 * В примере с окружностями одно выражение — return circle1.getRadius() - circle2.getRadius();.
 * Если мы хотим реализовать более сложную логику, то тело лямбды будет состоять из нескольких выражений.
 * К примеру, чтобы окружности с радиусом 0 попадали в конец отсортированного списка (то есть всегда считались бы
 * больше другой окружности), мы можем использовать такую лямбду.
 */


public class Main {
    public static void main(String[] args) {

    }

    public void test(List<String> str) {
        str.stream().map(f -> f.charAt(1)).close();
        
    }

}
